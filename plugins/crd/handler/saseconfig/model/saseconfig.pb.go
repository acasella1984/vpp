// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: saseconfig.proto

package model

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type SaseConfig_ServiceFunction_Type int32

const (
	SaseConfig_ServiceFunction_Pod               SaseConfig_ServiceFunction_Type = 0
	SaseConfig_ServiceFunction_ExternalInterface SaseConfig_ServiceFunction_Type = 1
)

var SaseConfig_ServiceFunction_Type_name = map[int32]string{
	0: "Pod",
	1: "ExternalInterface",
}

var SaseConfig_ServiceFunction_Type_value = map[string]int32{
	"Pod":               0,
	"ExternalInterface": 1,
}

func (x SaseConfig_ServiceFunction_Type) String() string {
	return proto.EnumName(SaseConfig_ServiceFunction_Type_name, int32(x))
}

func (SaseConfig_ServiceFunction_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8f523e7d7f9b860d, []int{0, 0, 0}
}

// SaseConfig is used to store definition of a sase config as a k8s CRD resource.
type SaseConfig struct {
	// Name of the chain.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// true if the service chain should be unidirectional (the traffic should pass in one way only).
	// Otherwise the chain is bidirectional (the traffic can pass both ways).
	Unidirectional bool `protobuf:"varint,2,opt,name=unidirectional,proto3" json:"unidirectional,omitempty"`
	// Name of the custom pod network where the chain resides
	// (if applicable, can be left blank for the default pod network).
	Network string `protobuf:"bytes,3,opt,name=network,proto3" json:"network,omitempty"`
	// List of service functions (chain elements) in the chain.
	Chain                []*SaseConfig_ServiceFunction `protobuf:"bytes,4,rep,name=chain,proto3" json:"chain,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *SaseConfig) Reset()         { *m = SaseConfig{} }
func (m *SaseConfig) String() string { return proto.CompactTextString(m) }
func (*SaseConfig) ProtoMessage()    {}
func (*SaseConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f523e7d7f9b860d, []int{0}
}
func (m *SaseConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SaseConfig.Unmarshal(m, b)
}
func (m *SaseConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SaseConfig.Marshal(b, m, deterministic)
}
func (m *SaseConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaseConfig.Merge(m, src)
}
func (m *SaseConfig) XXX_Size() int {
	return xxx_messageInfo_SaseConfig.Size(m)
}
func (m *SaseConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_SaseConfig.DiscardUnknown(m)
}

var xxx_messageInfo_SaseConfig proto.InternalMessageInfo

func (m *SaseConfig) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SaseConfig) GetUnidirectional() bool {
	if m != nil {
		return m.Unidirectional
	}
	return false
}

func (m *SaseConfig) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

func (m *SaseConfig) GetChain() []*SaseConfig_ServiceFunction {
	if m != nil {
		return m.Chain
	}
	return nil
}

type SaseConfig_ServiceFunction struct {
	// Name of the service function (optional).
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Type of the service function.
	Type SaseConfig_ServiceFunction_Type `protobuf:"varint,2,opt,name=type,proto3,enum=model.SaseConfig_ServiceFunction_Type" json:"type,omitempty"`
	// Pod selector (k8s labels) identifying the pod(s)
	// (applicable for pod service function type).
	PodSelector map[string]string `protobuf:"bytes,3,rep,name=pod_selector,json=podSelector,proto3" json:"pod_selector,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Interface trough which the traffic enters or leaves the pod / external interface. Applicable for:
	// - pods that use only a single interface for SFC (first/last pod in the chain
	//   or pods using the same interface for SFC input and output).
	// - external interfaces
	Interface string `protobuf:"bytes,6,opt,name=interface,proto3" json:"interface,omitempty"`
	// Interface trough which the traffic enters the service function. Applicable for:
	// - pods using different interfaces for SFC input and output
	InputInterface string `protobuf:"bytes,4,opt,name=input_interface,json=inputInterface,proto3" json:"input_interface,omitempty"`
	// Interface trough which the traffic leaves the service function. Applicable for:
	// - pods using different interfaces for SFC input and output
	OutputInterface      string   `protobuf:"bytes,5,opt,name=output_interface,json=outputInterface,proto3" json:"output_interface,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SaseConfig_ServiceFunction) Reset()         { *m = SaseConfig_ServiceFunction{} }
func (m *SaseConfig_ServiceFunction) String() string { return proto.CompactTextString(m) }
func (*SaseConfig_ServiceFunction) ProtoMessage()    {}
func (*SaseConfig_ServiceFunction) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f523e7d7f9b860d, []int{0, 0}
}
func (m *SaseConfig_ServiceFunction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SaseConfig_ServiceFunction.Unmarshal(m, b)
}
func (m *SaseConfig_ServiceFunction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SaseConfig_ServiceFunction.Marshal(b, m, deterministic)
}
func (m *SaseConfig_ServiceFunction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaseConfig_ServiceFunction.Merge(m, src)
}
func (m *SaseConfig_ServiceFunction) XXX_Size() int {
	return xxx_messageInfo_SaseConfig_ServiceFunction.Size(m)
}
func (m *SaseConfig_ServiceFunction) XXX_DiscardUnknown() {
	xxx_messageInfo_SaseConfig_ServiceFunction.DiscardUnknown(m)
}

var xxx_messageInfo_SaseConfig_ServiceFunction proto.InternalMessageInfo

func (m *SaseConfig_ServiceFunction) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SaseConfig_ServiceFunction) GetType() SaseConfig_ServiceFunction_Type {
	if m != nil {
		return m.Type
	}
	return SaseConfig_ServiceFunction_Pod
}

func (m *SaseConfig_ServiceFunction) GetPodSelector() map[string]string {
	if m != nil {
		return m.PodSelector
	}
	return nil
}

func (m *SaseConfig_ServiceFunction) GetInterface() string {
	if m != nil {
		return m.Interface
	}
	return ""
}

func (m *SaseConfig_ServiceFunction) GetInputInterface() string {
	if m != nil {
		return m.InputInterface
	}
	return ""
}

func (m *SaseConfig_ServiceFunction) GetOutputInterface() string {
	if m != nil {
		return m.OutputInterface
	}
	return ""
}

func init() {
	proto.RegisterEnum("model.SaseConfig_ServiceFunction_Type", SaseConfig_ServiceFunction_Type_name, SaseConfig_ServiceFunction_Type_value)
	proto.RegisterType((*SaseConfig)(nil), "model.SaseConfig")
	proto.RegisterType((*SaseConfig_ServiceFunction)(nil), "model.SaseConfig.ServiceFunction")
	proto.RegisterMapType((map[string]string)(nil), "model.SaseConfig.ServiceFunction.PodSelectorEntry")
}

func init() { proto.RegisterFile("saseconfig.proto", fileDescriptor_8f523e7d7f9b860d) }

var fileDescriptor_8f523e7d7f9b860d = []byte{
	// 339 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0xc1, 0x4e, 0xc2, 0x40,
	0x10, 0x86, 0x2d, 0x6d, 0x41, 0x06, 0x03, 0x75, 0xa3, 0x49, 0x43, 0x3c, 0x20, 0x07, 0xc4, 0x4b,
	0x0f, 0x78, 0xd0, 0x70, 0xf0, 0x62, 0x30, 0xf1, 0x46, 0x8a, 0x9e, 0xc9, 0xda, 0x0e, 0xba, 0xa1,
	0xec, 0x36, 0xdb, 0x2d, 0xda, 0xd7, 0xf0, 0x49, 0x7c, 0x44, 0xc3, 0x14, 0x69, 0x24, 0x26, 0xdc,
	0x76, 0xfe, 0xf9, 0x66, 0xe6, 0xcf, 0x9f, 0x05, 0x2f, 0xe3, 0x19, 0x46, 0x4a, 0x2e, 0xc4, 0x5b,
	0x90, 0x6a, 0x65, 0x14, 0x73, 0x57, 0x2a, 0xc6, 0xa4, 0xff, 0xed, 0x00, 0xcc, 0x78, 0x86, 0x0f,
	0xd4, 0x63, 0x0c, 0x1c, 0xc9, 0x57, 0xe8, 0x5b, 0x3d, 0x6b, 0xd8, 0x0c, 0xe9, 0xcd, 0x06, 0xd0,
	0xce, 0xa5, 0x88, 0x85, 0xc6, 0xc8, 0x08, 0x25, 0x79, 0xe2, 0xd7, 0x7a, 0xd6, 0xf0, 0x38, 0xdc,
	0x53, 0x99, 0x0f, 0x0d, 0x89, 0xe6, 0x43, 0xe9, 0xa5, 0x6f, 0xd3, 0xf8, 0x6f, 0xc9, 0x6e, 0xc1,
	0x8d, 0xde, 0xb9, 0x90, 0xbe, 0xd3, 0xb3, 0x87, 0xad, 0xd1, 0x65, 0x40, 0xb7, 0x83, 0xea, 0x6e,
	0x30, 0x43, 0xbd, 0x16, 0x11, 0x3e, 0xe6, 0x92, 0xb6, 0x85, 0x25, 0xdf, 0xfd, 0xb2, 0xa1, 0xb3,
	0xd7, 0xfa, 0xd7, 0xe2, 0x18, 0x1c, 0x53, 0xa4, 0x48, 0xc6, 0xda, 0xa3, 0xc1, 0xc1, 0xfd, 0xc1,
	0x73, 0x91, 0x62, 0x48, 0x33, 0xec, 0x05, 0x4e, 0x52, 0x15, 0xcf, 0x33, 0x4c, 0x30, 0x32, 0x4a,
	0xfb, 0x36, 0x79, 0x1c, 0x1d, 0xde, 0x31, 0x55, 0xf1, 0x6c, 0x3b, 0x34, 0x91, 0x46, 0x17, 0x61,
	0x2b, 0xad, 0x14, 0x76, 0x01, 0x4d, 0x21, 0x0d, 0xea, 0x05, 0x8f, 0xd0, 0xaf, 0x93, 0xd7, 0x4a,
	0x60, 0x57, 0xd0, 0x11, 0x32, 0xcd, 0xcd, 0xbc, 0x62, 0x1c, 0x62, 0xda, 0x24, 0x3f, 0xed, 0xc0,
	0x6b, 0xf0, 0x54, 0x6e, 0xfe, 0x92, 0x2e, 0x91, 0x9d, 0x52, 0xdf, 0xa1, 0xdd, 0x7b, 0xf0, 0xf6,
	0x2d, 0x31, 0x0f, 0xec, 0x25, 0x16, 0xdb, 0xac, 0x36, 0x4f, 0x76, 0x06, 0xee, 0x9a, 0x27, 0x79,
	0x99, 0x55, 0x33, 0x2c, 0x8b, 0x71, 0xed, 0xce, 0xea, 0x0f, 0xc0, 0xd9, 0xc4, 0xc2, 0x1a, 0x60,
	0x4f, 0x55, 0xec, 0x1d, 0xb1, 0x73, 0x38, 0x9d, 0x7c, 0x1a, 0xd4, 0x92, 0x27, 0xbb, 0x2b, 0x9e,
	0xf5, 0x5a, 0xa7, 0x0f, 0x74, 0xf3, 0x13, 0x00, 0x00, 0xff, 0xff, 0x54, 0xd7, 0x15, 0xc5, 0x54,
	0x02, 0x00, 0x00,
}
